# This Ansible playbook automates the setup of a basic Zsh development environment on macOS.
# It performs the following actions:
# - Installs Oh My Zsh if not already present.
# - Configures ~/.zprofile to source ~/.zshrc.
# - Copies a custom .zshrc configuration file.
# - Installs essential Homebrew packages: neovim, htop, btop, tmux, fzf, fd, ripgrep, pyenv, nvm.
# - Installs various Powerline-compatible fonts via Homebrew Cask: font-powerline-symbols, font-consolas-for-powerline, font-fira-mono-for-powerline, font-noto-mono-for-powerline, font-hack-nerd-font.
# - Sets up Lazy.nvim for Neovim, cloning the starter configuration and copying a custom core.lua.
# - Installs Tmux Plugin Manager (tpm) and copies a custom .tmux.conf file.
---
- hosts: localhost
  connection: local
  remote_user: "{{ lookup('env', 'USER') }}"
  tasks:
    - name: Check if Oh My Zsh exists
      stat:
        path: ~/.oh-my-zsh
      register: ohmyzsh_dir
    - name: Download Oh My Zsh
      get_url:
        url: https://install.ohmyz.sh/
        dest: "/tmp/ohmyz.sh"
        mode: "0755"
      when: not ohmyzsh_dir.stat.exists
    - name: Install Oh My Zsh
      shell:
        cmd: sh /tmp/ohmyz.sh
      when: not ohmyzsh_dir.stat.exists
    - name: Enable OhMyZsh configuration
      lineinfile:
        path: ~/.zprofile
        line: "[[ -r ~/.zshrc ]] && . ~/.zshrc"
        state: present
        create: yes
    - name: Copy Zshrc
      copy:
        src: .zshrc
        dest: ~/.zshrc

    - homebrew:
        name: neovim,htop,btop,tmux,fzf,fd,ripgrep,pyenv
        state: present
        update_homebrew: yes
    - homebrew_cask:
        name: font-powerline-symbols,font-consolas-for-powerline,font-fira-mono-for-powerline,font-noto-mono-for-powerline,font-hack-nerd-font
        state: present

    - name: Check if Lazy.nvim exists
      stat:
        path: ~/.config/nvim
      register: lazynvim_dir
    - name: Download Lazy.nvim
      git:
        repo: https://github.com/LazyVim/starter
        dest: ~/.config/nvim
        depth: 1
      when: not lazynvim_dir.stat.exists
    - name: Clean up Lazy.nvim
      file:
        path: ~/.config/nvim/.git
        state: absent
    - name: Copy NeoVim config
      copy:
        src: ../Shared/nvim-core.lua
        dest: ~/.config/nvim/lua/plugins/core.lua

    - name: Install Tmux TMP plugins manager
      git:
        repo: https://github.com/tmux-plugins/tpm
        dest: ~/.tmux/plugins/tpm
        depth: 1
    - name: Copying Tmux configuration
      copy:
        src: ../Shared/.tmux.conf
        dest: ~/.tmux.conf
    - name: Install Node Version Manager
      homebrew:
        name: nvm
        state: present
